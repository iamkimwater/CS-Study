# 데이터를 효율적으로 사용하려면: 자료구조

# 메모리: RAM(Random Access Memory)

# 임의 접근 = 접근하는데 O(1) 시간 복잡도
# 순차 접근 = 접근하는데 O(n) 시간 복잡도
# 메모리는 임의 접근을 하므로 메모리 공간의 주소를 알면 O(1) 시간 복잡도

# 1비트 = 스위치 1개 = on/off
# 메모리 1칸 = 1바이트 = 8비트 = 256개의 정보
# 정수 = 메모리 4칸 = 4바이트 = 32비트 = 2^32 개의 정보 = (-2^31) ~ (0) ~ (2^31 - 1)

# c++
# 주소를 저장하는 변수 = 주소값
# 포인터 변수 = 주소값

# c#, 파이썬, 자바, 자바스크립트
# 주소를 저장하는 변수의 별명 = 주소값
# 참조 변수 = 주소값

# 파이썬의 모든 변수는 참조 변수
# 파이썬의 모든 데이터는 객체이기 때문
# 파이썬에서 주소값을 알아내는 법
print(id(1))

# Aliasing: 여러 변수가 같은 메모리를 가리키는 것
x = 1
y = x
print(id(x))
print(id(y))

# 기본 자료구조
# 1. 배열(Array)(동적 / 정적)
# 2. 링크드리스트(싱글리 / 더블리)
# 3. 해쉬테이블
# 4. 트리
# 5. 그래프

# 추상 자료구조
# 1. 리스트
# 2. 스택
# 3. 큐 순환큐 우선순위큐
# 4. 힙 이진탐색트리